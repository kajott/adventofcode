# configuration file for verify.py
# format: filename [flags...]
# possible flags:
#   "comment"  = match file with specific solution by comment in README.md notes
#   nonote     = don't match any solution note, just run and verify the result
#   part1      = file solves only part 1 even though filename suggests otherwise
#   part2      = file solves only part 2 even though filename suggests otherwise
#   bothparts  = file solves both parts even though filename suggests otherwise
#   nocheck    = don't check results for correctness
#   check1only = program only outputs part 1 result
#   check2only = program only outputs part 2 result
#   norun      = don't run the program at all (e.g. because it takes too long)
#   ignore     = ignore the file completely


# 2015/24 try 1 runs too slow to be measured
2015/24/aoc2015_24_part1_try1.py   norun

# 2016/08 prints part 2's answer as ASCII art, we can't verify that
2016/08/aoc2016_08.py              check1only

# 2016/11's C solutions are non-golf, but we still want to verify them
2016/11/aoc2016_11_part1.c         nonote
2016/11/aoc2016_11_part2.c         nonote

# 2017/17 part 2 try 1 is unreasonably slow, even in C
2017/17/aoc2017_17_part2_try1.py   norun
2017/17/aoc2017_17_part2_try1.c    norun

# 2018/10 prints part 1's answer as ASCII art, we can't verify that
2018/10/aoc2018_10.py              check2only

# 2018/11 part 2's first solution attempt takes ridiculously long to run
2018/11/aoc2018_11_part2_try1.py   norun

# 2018/20 uses nonstandard solution <-> filename mapping
2018/20/aoc2018_20_simple.py       "shortcut"

# 2018/20 comes with an additional implementation
# that isn't tracked in README.md and requires a differently-named input file
2018/20/aoc2018_20_golfcontest.py  ignore

# 2015-2020/25 don't have a second part at all
2015/25/aoc2015_25.py              part1
2016/25/aoc2016_25.py              part1
2017/25/aoc2017_25.py              part1
2018/25/aoc2018_25.py              part1
2019/25/aoc2019_25.py              part1
2020/25/aoc2020_25.py              part1
2021/25/aoc2021_25_try1.py         part1
2021/25/aoc2021_25_try2.py         part1
2021/25/aoc2021_25_try3.py         part1

# 2019/08 prints part 2's answer as ASCII art, we can't verify that
2019/08/aoc2019_08_part2.py        nocheck

# 2019/11 prints part 2's answer as ASCII art, we can't verify that
2019/11/aoc2019_11_part2.py        nocheck

# 2020/19 try 1 doesn't work with the actual input
2020/19/aoc2020_19_part1_try1.py   ignore

# 2021/13 prints part 2's answer as ASCII art, we can't verify that
2021/13/aoc2021_13_part2.py        nocheck

# 2021/22 part 2 try 1 is unreasonably slow
2021/22/aoc2021_22_part2_try1.py   norun

# 2021/25 part 1 try 1 is unreasonably slow
2021/25/aoc2021_25_try1.py         norun

# 2022/10 prints part 2's answer as ASCII art, we can't verify that
2022/10/aoc2022_10_part2.py        nocheck

# 2022/15 part 2 try 1 is unreasonably slow and memory-hungry
2022/15/aoc2022_15_part2_try1.py   norun

# 2022/16 part 2 try 1 is relatively slow (>1 minute)
2022/16/aoc2022_16_part2_try1.py   norun
